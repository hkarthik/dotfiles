" Vim
" ===

" Use Vim settings, rather then Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
filetype off

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" All other plugins
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/syntastic'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-markdown'
Plugin 'tpope/vim-rails'
Plugin 'tpope/vim-surround'
Plugin 'vim-ruby/vim-ruby'
Plugin 'pangloss/vim-javascript'
Plugin 'mattn/gist-vim'
Plugin 'mattn/webapi-vim'
Plugin 'sickill/vim-pasta'
Plugin 'altercation/vim-colors-solarized'
Plugin 'kien/ctrlp.vim'
Plugin 'ddollar/nerdcommenter'
Plugin 'ervandew/supertab'
Plugin 'Lokaltog/vim-powerline'
Plugin 'rking/ag.vim'
Plugin 'fatih/vim-go'

call vundle#end()
filetype plugin indent on

" General Config
" ==============

let mapleader=','
set encoding=utf-8
set number                      " Line numbers are good
set backspace=indent,eol,start  " Allow backspace in insert mode
set history=50                  " Store lots of :cmdline history
set showcmd                     " Show incomplete cmds down the bottom
set showmode                    " Show current mode down the bottom
set gcr=a:blinkon0              " Disable cursor blink
set autoread                    " Reload files changed outside vim
set laststatus=2                " Always show status line
set clipboard=unnamed           " Use system clipboard

" This makes vim act like all other editors, buffers can
" exist in the background without being in a window.
" http://items.sjbach.com/319/configuring-vim-right
set hidden

" Syntax
" ======

syntax on
syntax enable
set background=dark
colorscheme solarized

" Search Settings
" ===============

set incsearch        " Find the next match as we type the search
set hlsearch         " Hilight searches by default
set viminfo='100,f1  " Save up to 100 marks, enable capital marks

" Turn Off Swap Files
" ===================

set noswapfile
set nobackup
set nowb

" Indentation and Display
" =======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set cmdheight=2


set list listchars=trail:Â·   " Display tabs and trailing spaces visually
set nowrap                            " Don't wrap lines
set linebreak                         " Wrap lines at convenient points

" Folds
" =====

set foldmethod=indent   " Fold based on indent
set foldnestmax=3       " Deepest fold is 3 levels
set nofoldenable        " Don't fold by default

" Completion
" ==========

set wildmode=list:longest
set wildmenu                    " Enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~     " Stuff to ignore when tab completing
set wildignore+=*vim/backups*

" Filetype overrides
" ==================
au BufNewFile,BufRead *.ejs set filetype=html
au BufRead,BufNewFile *.jbuilder setf ruby

" Go files
au BufRead,BufNewFile *.go set noet ts=4 sw=4 tabstop=4 noexpandtab nolist" 4 space tabs for go files
au FileType go map <Leader>r <Plug>(go-run)
au FileType go map <Leader>m :GoFmt<CR>


" Plugin Configuration
" =================================
autocmd vimenter * NERDTree
map <Leader>f :NERDTreeFind<CR>
let g:gist_clip_command = 'pbcopy'
let g:ackprg = 'ag --nogroup --nocolor --column' " Use Ag with Ack.vim instead of ack
let g:go_fmt_autosave = 0 " Don't use auto gofmt on save

" Run gofmt


" Run test from vim
" ===========================
map <Leader>t :call RunCurrentTestFile()<CR>

function! RunCurrentTestFile()
  if InTestFile()
    let l:command = "zeus test " . @% . ""
    call RunTests(l:command)
  endif
endfunction

function! InTestFile()
  return match(expand("%"), "_test.rb$") != -1
endfunction

function! RunTests(command)
  execute ":w\|!clear && echo " . a:command . " && echo && " . a:command
endfunction
